#!/bin/bash
###############################################################################
# Copyright (C) Intel Corporation
#
# SPDX-License-Identifier: MIT
###############################################################################
## start of boilerplate to switch to project root ------------------------------
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
proj_dir="$( dirname "${script_dir}" )"
cd ${proj_dir}

## Read options -----------------------------------------------------------
export USE_GPL="no"
export BUILD_MODE= "Release"

while [ "$1" != "" ]; do
    case $1 in
        gpl )
            export USE_GPL="yes"
            ;;
        debug )
            export BUILD_MODE="Debug"
            ;;
        * )
            echo "usage: build [gpl] [debug]"
            exit 1
    esac
    shift
done

## start of commands -----------------------------------------------------------
build_dir=${proj_dir}/_extbuild
DEFAULT_VPL_BUILD_DEPENDENCIES=${proj_dir}/_deps

if [ -z "$VPL_BUILD_DEPENDENCIES" ];then
  # make sure VPL_BUILD_DEPENDENCIES will be available after script is run
  if [ "${BASH_SOURCE[0]}" == "${0}" ];then
      msg="VPL_BUILD_DEPENDENCIES is not set in the environment and the \
script is not being sourced. Export VPL_BUILD_DEPENDENCIES or call like this:"
      printf "%s\n\nsource %s\n" "$msg" "$BASH_SOURCE" | fold -s
      exit 1
  fi
  export VPL_BUILD_DEPENDENCIES="${DEFAULT_VPL_BUILD_DEPENDENCIES}"
fi
if [ "${BASH_SOURCE[0]}" == "${0}" ];then
  #exit on error if we are not sourced
  set -o errexit
fi

install_dir=${VPL_BUILD_DEPENDENCIES}

rm -rf ${build_dir}
rm -rf ${VPL_BUILD_DEPENDENCIES}

## build FFmpeg with SVT-HEVC & SVT-AV1
mkdir -p ${build_dir}
cd ${build_dir}

if [ "$(uname -m)" == "x86_64" ]; then
    git clone --depth=1 -b v1.5.0 https://github.com/OpenVisualCloud/SVT-HEVC.git && cd SVT-HEVC
    sed -i 's/#define LIB_PRINTF_ENABLE                1/#define LIB_PRINTF_ENABLE                0/' \
          ./Source/Lib/Codec/EbDefinitions.h
    if [ "$BUILD_MODE" == "Debug" ]; then
      sed -i 's/#define DEBUG_MEMORY_USAGE/#undef DEBUG_MEMORY_USAGE/' \
            ./Source/Lib/Codec/EbMalloc.h
    fi
    mkdir release && cd release
    cmake .. -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=${BUILD_MODE} \
          -DCMAKE_INSTALL_PREFIX=${install_dir}/ -DBUILD_SHARED_LIBS=off -DBUILD_APP=off
    make -j $(nproc) && make install

    cd ${build_dir}
    git clone --depth=1 -b v0.8.4 https://github.com/AOMediaCodec/SVT-AV1 && cd SVT-AV1
    if [ "$BUILD_MODE" == "Debug" ]; then
      sed -i 's/#define DEBUG_MEMORY_USAGE/#undef DEBUG_MEMORY_USAGE/' \
            ./Source/Lib/Common/Codec/EbMalloc.h
    fi
    mkdir release && cd release
    cmake .. -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=${BUILD_MODE} \
          -DCMAKE_INSTALL_PREFIX=${install_dir}/ -DBUILD_SHARED_LIBS=off -DBUILD_APPS=off -DCMAKE_C_FLAGS="$(CMAKE_C_FLAGS) -DSVT_LOG_QUIET=1"
    make -j $(nproc) && make install
fi

if [ "$USE_GPL" == "yes" ]; then
  ## build x264
  cd ${build_dir}
  git clone --depth 1 -b stable https://code.videolan.org/videolan/x264.git && cd x264
  ./configure --prefix=${install_dir} --enable-static --enable-pic
  PATH="${install_dir}/bin:$PATH" && PKG_CONFIG_PATH="${install_dir}/lib/pkgconfig:${install_dir}/lib64/pkgconfig"
  make && make install
fi

## build libdav1d
cd ${build_dir}
git clone --depth=1 -b0.7.0  https://code.videolan.org/videolan/dav1d.git && cd dav1d
meson build --prefix ${install_dir}/ --libdir ${install_dir}/lib --buildtype release --default-library=static -Denable_avx512=false
ninja -C build && cd build
ninja install


## ffmpeg
cd ${build_dir}
git clone --depth=1 -b n4.3.1 https://github.com/FFmpeg/FFmpeg ffmpeg && cd ffmpeg

if [ "$(uname -m)" == "x86_64" ]; then
    git config user.email "bootstrap@localhost"
    git config user.name "bootstrap"
    patch=0001-lavc-svt_hevc-add-libsvt-hevc-encoder-wrapper.patch
    git am ${build_dir}/SVT-HEVC/ffmpeg_plugin/${patch}
    patch=0001-Add-ability-for-ffmpeg-to-run-svt-av1.patch
    git am ${build_dir}/SVT-AV1/ffmpeg_plugin/${patch}

    enable_svt_options='--enable-libsvthevc --enable-encoder=libsvt_hevc --enable-libsvtav1 --enable-encoder=libsvt_av1'
else
    enable_svt_options=''
fi

sed -i 's/OBJS-$(CONFIG_TESTSRC2_FILTER)               += vsrc_testsrc.o/OBJS-$(CONFIG_TESTSRC2_FILTER)               += vsrc_testsrc.o ..\/libavutil\/xga_font_data.o/' \
      ./libavfilter/Makefile

export PKG_CONFIG_PATH=${install_dir}/lib/pkgconfig:${install_dir}/lib64/pkgconfig:${PKG_CONFIG_PATH}
echo PKG_CONFIG_PATH:${PKG_CONFIG_PATH}

if [ "$USE_GPL" == "yes" ]; then
  enable_x264options='--enable-gpl --enable-libx264 --enable-encoder=libx264'
else
  enable_x264options=''
fi

./configure --disable-vaapi \
            --disable-cuda-llvm \
            --prefix=${install_dir} \
            --enable-static \
            --disable-shared \
            --enable-pic  \
            --disable-network  \
            --disable-everything \
            --disable-doc \
            --disable-manpages  \
            --disable-hwaccels \
            --disable-appkit \
            --disable-alsa  \
            --disable-avfoundation \
            --disable-iconv \
            --disable-lzma  \
            --disable-sdl2 \
            --disable-securetransport \
            --disable-xlib  \
            --disable-zlib \
            --disable-amf \
            --disable-audiotoolbox \
            --disable-cuvid \
            --disable-d3d11va \
            --disable-dxva2 \
            --disable-nvdec  \
            --disable-nvenc \
            --disable-v4l2-m2m \
            --disable-videotoolbox  \
            ${enable_x264options}  \
            --enable-indev=lavfi \
            --enable-protocol=file  \
            --enable-bsf=h264_mp4toannexb \
            --enable-bsf=hevc_mp4toannexb  \
            --enable-bsf=mjpeg2jpeg  \
            --enable-bsf=mjpega_dump_header  \
            --enable-decoder=rawvideo \
            --enable-encoder=rawvideo \
            --enable-demuxer=rawvideo  \
            --enable-demuxer=mjpeg  \
            --enable-muxer=rawvideo  \
            --enable-muxer=null \
            --enable-decoder=wrapped_avframe \
            --enable-encoder=wrapped_avframe \
            --enable-muxer=h264 \
            --enable-muxer=mpeg2video \
            --enable-muxer=mjpeg  \
            --enable-muxer=hevc \
            --enable-muxer=ivf \
            --enable-muxer=image2   \
            --enable-demuxer=image2  \
            --enable-filter=testsrc  \
            --enable-filter=testsrc2  \
            --enable-filter=rgbtestsrc  \
            --enable-filter=yuvtestsrc \
            --enable-demuxer=h264  \
            --enable-parser=h264 \
            --enable-decoder=h264 \
            --enable-demuxer=hevc  \
            --enable-decoder=hevc \
            --enable-parser=hevc  \
            --enable-demuxer=ivf \
            --enable-parser=av1  \
            --enable-parser=mjpeg  \
            --enable-decoder=mpeg2video \
            --enable-encoder=mpeg2video  \
            --enable-decoder=mjpeg \
            --enable-encoder=mjpeg  \
            --enable-filter=scale \
            --enable-filter=crop   \
            --enable-filter=overlay   \
            --enable-filter=split   \
            --enable-filter=drawbox   \
            --enable-filter=psnr \
            --enable-filter=ssim  \
            --enable-filter=select \
            --enable-filter=concat \
            ${enable_svt_options} \
            --enable-libdav1d \
            --enable-decoder=libdav1d

make -j $(nproc) && make install

cd ${proj_dir}
